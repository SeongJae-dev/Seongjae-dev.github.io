{"version":3,"sources":["webpack:///./src/templates/index.js"],"names":["Index","data","pageContext","nextPagePath","previousPagePath","posts","allMarkdownRemark","edges","map","node","id","autoExcerpt","excerpt","frontmatter","title","date","path","author","coverImage","tags","key","previousPath","previousLabel","nextPath","nextLabel","propTypes","PropTypes","object","isRequired","shape","string"],"mappings":"0MAQMA,EAAQ,SAAC,GAA+D,IAA7DC,EAA4D,EAA5DA,KAA4D,IAAtDC,YAAeC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,iBAEpBC,EAC1BJ,EADFK,kBAAqBC,MAGvB,OACE,oCACE,kBAAC,IAAD,MACA,kBAAC,IAAD,KACGF,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAEVC,EAWED,EAXFC,GACSC,EAUPF,EAVFG,QAFF,EAYIH,EATFI,YACEC,EAJJ,EAIIA,MACAC,EALJ,EAKIA,KACAC,EANJ,EAMIA,KACAC,EAPJ,EAOIA,OACAC,EARJ,EAQIA,WACAN,EATJ,EASIA,QACAO,EAVJ,EAUIA,KAIJ,OACE,kBAAC,IAAD,CACEC,IAAKV,EACLI,MAAOA,EACPC,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRC,WAAYA,EACZC,KAAMA,EACNP,QAASA,GAAWD,OAK1B,kBAAC,IAAD,CACEU,aAAcjB,EACdkB,cAAc,cACdC,SAAUpB,EACVqB,UAAU,mBAOpBxB,EAAMyB,UAAY,CAChBxB,KAAMyB,IAAUC,OAAOC,WACvB1B,YAAawB,IAAUG,MAAM,CAC3B1B,aAAcuB,IAAUI,OACxB1B,iBAAkBsB,IAAUI,UAqCjB9B","file":"component---src-templates-index-js-d602da39e24af6e63f0d.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\nimport SEO from '../components/seo'\r\nimport Layout from '../components/layout'\r\nimport Post from '../components/post'\r\nimport Navigation from '../components/navigation'\r\n\r\nconst Index = ({ data, pageContext: { nextPagePath, previousPagePath } }) => {\r\n  const {\r\n    allMarkdownRemark: { edges: posts },\r\n  } = data\r\n\r\n  return (\r\n    <>\r\n      <SEO />\r\n      <Layout>\r\n        {posts.map(({ node }) => {\r\n          const {\r\n            id,\r\n            excerpt: autoExcerpt,\r\n            frontmatter: {\r\n              title,\r\n              date,\r\n              path,\r\n              author,\r\n              coverImage,\r\n              excerpt,\r\n              tags,\r\n            },\r\n          } = node\r\n\r\n          return (\r\n            <Post\r\n              key={id}\r\n              title={title}\r\n              date={date}\r\n              path={path}\r\n              author={author}\r\n              coverImage={coverImage}\r\n              tags={tags}\r\n              excerpt={excerpt || autoExcerpt}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Navigation\r\n          previousPath={previousPagePath}\r\n          previousLabel=\"Newer posts\"\r\n          nextPath={nextPagePath}\r\n          nextLabel=\"Older posts\"\r\n        />\r\n      </Layout>\r\n    </>\r\n  )\r\n}\r\n\r\nIndex.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  pageContext: PropTypes.shape({\r\n    nextPagePath: PropTypes.string,\r\n    previousPagePath: PropTypes.string,\r\n  }),\r\n}\r\n\r\nexport const postsQuery = graphql`\r\n  query($limit: Int!, $skip: Int!) {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"//posts//\" } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM YYYY\")\r\n            path\r\n            author\r\n            excerpt\r\n            tags\r\n            coverImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 800) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Index\r\n"],"sourceRoot":""}